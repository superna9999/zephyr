/*
 * Copyright (c) 2017 BayLibre, SAS
 *
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef _STM32_FMC_H_
#define _STM32_FMC_H_

/* Bank Configurations */

/* Bank 1 */
#ifdef CONFIG_STM32_FMC_NOR_SRAM_BANK_1

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_TYPE_SRAM)
#define FMC_NOR_SRAM_BANK_1_TYPE 	FMC_MEMORY_TYPE_SRAM
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_TYPE_PSRAM)
#define FMC_NOR_SRAM_BANK_1_TYPE 	FMC_MEMORY_TYPE_PSRAM
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_TYPE_NOR)
#define FMC_NOR_SRAM_BANK_1_TYPE 	FMC_MEMORY_TYPE_NOR
#else
#error Invalid type
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_ACCESS_MODE_A)
#define FMC_NOR_SRAM_BANK_1_ACCESS_MODE	FMC_ACCESS_MODE_A
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_ACCESS_MODE_B)
#define FMC_NOR_SRAM_BANK_1_ACCESS_MODE	FMC_ACCESS_MODE_B
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_ACCESS_MODE_C)
#define FMC_NOR_SRAM_BANK_1_ACCESS_MODE	FMC_ACCESS_MODE_C
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_ACCESS_MODE_D)
#define FMC_NOR_SRAM_BANK_1_ACCESS_MODE	FMC_ACCESS_MODE_D
#else
#error Invalid access mode
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_WAIT_SIGNAL_POLARITY_LOW)
#define FMC_NOR_SRAM_BANK_1_SIGNAL_POLARITY	FMC_WAIT_SIGNAL_POLARITY_LOW
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_WAIT_SIGNAL_POLARITY_HIGH)
#define FMC_NOR_SRAM_BANK_1_SIGNAL_POLARITY	FMC_WAIT_SIGNAL_POLARITY_HIGH
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_TIMING_BEFORE_WS)
#define FMC_NOR_SRAM_BANK_1_TIMING_WS	FMC_WAIT_TIMING_BEFORE_WS
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_TIMING_DURING_WS)
#define FMC_NOR_SRAM_BANK_1_TIMING_WS	FMC_WAIT_TIMING_DURING_WS
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_CONTINUOUS_CLOCK_SYNC_ONLY)
#define FMC_NOR_SRAM_BANK_1_CLOCK_SYNC	FMC_CONTINUOUS_CLOCK_SYNC_ONLY
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_CONTINUOUS_CLOCK_SYNC_ASYNC)
#define FMC_NOR_SRAM_BANK_1_CLOCK_SYNC	FMC_CONTINUOUS_CLOCK_SYNC_ASYNC
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_PAGE_SIZE_NONE)
#define FMC_NOR_SRAM_BANK_1_PAGE_SIZE	FMC_PAGE_SIZE_NONE
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_PAGE_SIZE_128)
#define FMC_NOR_SRAM_BANK_1_PAGE_SIZE	FMC_PAGE_SIZE_128
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_PAGE_SIZE_256)
#define FMC_NOR_SRAM_BANK_1_PAGE_SIZE	FMC_PAGE_SIZE_256
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_PAGE_SIZE_512)
#define FMC_NOR_SRAM_BANK_1_PAGE_SIZE	FMC_PAGE_SIZE_512
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_PAGE_SIZE_1024)
#define FMC_NOR_SRAM_BANK_1_PAGE_SIZE	FMC_PAGE_SIZE_1024
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_8BIT)
#define FMC_NOR_SRAM_BANK_1_WIDTH	FMC_NORSRAM_MEM_BUS_WIDTH_8
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_16BIT)
#define FMC_NOR_SRAM_BANK_1_WIDTH	FMC_NORSRAM_MEM_BUS_WIDTH_16
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_1_32BIT)
#define FMC_NOR_SRAM_BANK_1_WIDTH	FMC_NORSRAM_MEM_BUS_WIDTH_32
#else
#error Invalid configuration
#endif

#endif /* CONFIG_STM32_FMC_NOR_SRAM_BANK_1 */

/* Bank 2 */
#ifdef CONFIG_STM32_FMC_NOR_SRAM_BANK_2

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_TYPE_SRAM)
#define FMC_NOR_SRAM_BANK_2_TYPE 	FMC_MEMORY_TYPE_SRAM
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_TYPE_PSRAM)
#define FMC_NOR_SRAM_BANK_2_TYPE 	FMC_MEMORY_TYPE_PSRAM
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_TYPE_NOR)
#define FMC_NOR_SRAM_BANK_2_TYPE 	FMC_MEMORY_TYPE_NOR
#else
#error Invalid type
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_ACCESS_MODE_A)
#define FMC_NOR_SRAM_BANK_2_ACCESS_MODE	FMC_ACCESS_MODE_A
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_ACCESS_MODE_B)
#define FMC_NOR_SRAM_BANK_2_ACCESS_MODE	FMC_ACCESS_MODE_B
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_ACCESS_MODE_C)
#define FMC_NOR_SRAM_BANK_2_ACCESS_MODE	FMC_ACCESS_MODE_C
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_ACCESS_MODE_D)
#define FMC_NOR_SRAM_BANK_2_ACCESS_MODE	FMC_ACCESS_MODE_D
#else
#error Invalid access mode
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_WAIT_SIGNAL_POLARITY_LOW)
#define FMC_NOR_SRAM_BANK_2_SIGNAL_POLARITY	FMC_WAIT_SIGNAL_POLARITY_LOW
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_WAIT_SIGNAL_POLARITY_HIGH)
#define FMC_NOR_SRAM_BANK_2_SIGNAL_POLARITY	FMC_WAIT_SIGNAL_POLARITY_HIGH
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_TIMING_BEFORE_WS)
#define FMC_NOR_SRAM_BANK_2_TIMING_WS	FMC_WAIT_TIMING_BEFORE_WS
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_TIMING_DURING_WS)
#define FMC_NOR_SRAM_BANK_2_TIMING_WS	FMC_WAIT_TIMING_DURING_WS
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_CONTINUOUS_CLOCK_SYNC_ONLY)
#define FMC_NOR_SRAM_BANK_2_CLOCK_SYNC	FMC_CONTINUOUS_CLOCK_SYNC_ONLY
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_CONTINUOUS_CLOCK_SYNC_ASYNC)
#define FMC_NOR_SRAM_BANK_2_CLOCK_SYNC	FMC_CONTINUOUS_CLOCK_SYNC_ASYNC
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_PAGE_SIZE_NONE)
#define FMC_NOR_SRAM_BANK_2_PAGE_SIZE	FMC_PAGE_SIZE_NONE
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_PAGE_SIZE_128)
#define FMC_NOR_SRAM_BANK_2_PAGE_SIZE	FMC_PAGE_SIZE_128
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_PAGE_SIZE_256)
#define FMC_NOR_SRAM_BANK_2_PAGE_SIZE	FMC_PAGE_SIZE_256
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_PAGE_SIZE_512)
#define FMC_NOR_SRAM_BANK_2_PAGE_SIZE	FMC_PAGE_SIZE_512
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_PAGE_SIZE_1024)
#define FMC_NOR_SRAM_BANK_2_PAGE_SIZE	FMC_PAGE_SIZE_1024
#else
#error Invalid configuration
#endif

#if defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_8BIT)
#define FMC_NOR_SRAM_BANK_2_WIDTH	FMC_NORSRAM_MEM_BUS_WIDTH_8
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_16BIT)
#define FMC_NOR_SRAM_BANK_2_WIDTH	FMC_NORSRAM_MEM_BUS_WIDTH_16
#elif defined(CONFIG_STM32_FMC_NOR_SRAM_BANK_2_32BIT)
#define FMC_NOR_SRAM_BANK_2_WIDTH	FMC_NORSRAM_MEM_BUS_WIDTH_32
#else
#error Invalid configuration
#endif

#endif /* CONFIG_STM32_FMC_NOR_SRAM_BANK_2 */

/* device config */
struct stm32_fmc_config {
	/* Bank ID */
	uint32_t bankid;
	/* clock subsystem driving this peripheral */
	struct stm32_pclken pclken;
	/* Configuration */
	FMC_NORSRAM_InitTypeDef config;
	/* Timings */
	FMC_NORSRAM_TimingTypeDef timings;
};

/* driver data */
struct stm32_fmc_data {
	/* clock device */
	struct device *clock;
	/* HAL Handle */
	SRAM_HandleTypeDef hsram;
};

#endif /* _STM32_FMC_H_ */
